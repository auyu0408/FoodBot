name: Unittest
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt install build-essential libpython3-dev libdbus-1-dev
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test food preference with unittest
      run: |
        coverage run -m unittest test_foodAPI_food_preference.py > /dev/null
        coverage report
    - name: Test price budget with unittest
      run: |
        coverage run -m unittest test_foodAPI_price_budget.py > /dev/null
        coverage report
    - name: Test other with unittest
      run: |
        coverage run -m unittest test_foodAPI_other.py > /dev/null
        coverage report
    - name: Test helper with unittest
      run: |
        coverage run -m unittest test_foodAPI_helper.py > /dev/null
        coverage report
    - name: Coverage overall source codes
      run: |
        coverage run -m unittest discover > /dev/null
        coverage report
    - name: Update coverage badge
      uses: tj-actions/coverage-badge-py@v2
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v14
      id: verify-changed-files
      with:
        files: coverage.svg
    - name: Commit files
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add coverage.svg
        git commit -m "Updated coverage.svg"
    - name: Push changes
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.github_token }}
        branch: ${{ github.ref }}
